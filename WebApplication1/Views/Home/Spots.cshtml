
@{
    ViewData["Title"] = "Spots";
}

<h1>Spots</h1>

<div class="row mb-3">
    <div class="col-3"></div>
    <div class="col-6"></div>
    <div class="col-3">
        <input type="search" id="inputKeyword" class="form-control" placeholder="搜尋" />
    </div>

</div>

<div class="row row-cols-1 row-cols-md-3 g-4" id="spots1">

@*     <div class="col">
        <div class="card h-100">
            <img src="..." class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">Card title</h5>
                <p class="card-text">This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.</p>
            </div>
            <div class="card-footer">
                <small class="text-body-secondary">Last updated 3 mins ago</small>
            </div>
        </div>
    </div>
 *@
</div>

@section Scripts{
    <script>
        const divspots = document.querySelector("#spots1");
		const inputKeyword = document.querySelector("#inputKeyword");

        const searchData = {
            "categoryId": 0,
            "keyword": "北投",
            "page": 2,
            "pageSize": 9,
            "sortType": "asc",
            "sortBy": ""
        };

        const loadSpots = async () => {
            const response = await fetch('@Url.Content("~/api/Spots")', {
                method: 'POST',
				body: JSON.stringify(searchData),
				headers: {
					'Content-Type': 'application/json'
                }
            });
			const data = await response.json();
			console.log(data);
            const cardSpots = data.spotsResult.map(spot => {
                const { spotId, spotTitle, spotDescription, spotImage, address } = spot;
                return (
                    `
            <div class="col">
                <div class="card h-100">
                    <img src="${spotImage}" class="card-img-top" alt="${spotTitle}">
                    <div class="card-body">
                        <h5 class="card-title">${spotId}. ${spotTitle}</h5>
                        <p class="card-text">${spotDescription.length <= 100 ? spotDescription : spotDescription.substring(0, 100)}...</p>
                    </div>
                    <div class="card-footer">
                    <small class="text-body-secondary">${address}</small>
                    </div>
                </div>
            </div>`
                )
            });
            divspots.innerHTML = cardSpots.join("");
        }

		inputKeyword.addEventListener("keydown", event => {
            if (event.key === "Enter") {
				searchData.keyword = event.target.value;
				searchData.page = 1;
				loadSpots();
            }
		});


		loadSpots();

    </script>
}